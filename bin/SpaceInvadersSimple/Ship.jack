
class Ship {

    // Location on the screen
    field int x, y;

    // The size of the square
    field int size;
	field int width;

    field Bullet bullet;

    /** Constructs a new square with a given location and size. */
    constructor Ship new() {
        let x = 0;
        let y = 230;
        let size = 10;
		let width = 40;

        do draw();

        return this;
    }

	method int getX() {
		return x;
	}
	
	method int getY() {
		return y;
	}
	
    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
       // do Screen.drawRectangle(x, y, x + size, y + size);
		 do Screen.drawRectangle(x, y, x + size + width, y + size);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        //do Screen.drawRectangle(x, y, x + size, y + size);
		do Screen.drawRectangle(x, y, x + size + width, y + size);
        return;
    }

    /** Moves left by 2 pixels. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            //do Screen.drawRectangle(x, y, x + size, y + size);
			do Screen.drawRectangle(x, y, x + size + width, y + size);
            let x = x - 2;
            do Screen.setColor(true);
            //do Screen.drawRectangle(x, y, x + size, y + size);
			do Screen.drawRectangle(x, y, x + size + width, y + size);
        }
		do Sys.wait(4);
        return;
    }

    /** Moves right by 2 pixels. */
    method void moveRight() {
        if ((x + size) < 470) {
            do Screen.setColor(false);
           // do Screen.drawRectangle(x, y, x + size, y + size);
		   do Screen.drawRectangle(x, y, x + size + width, y + size);
            let x = x + 2;
            do Screen.setColor(true);
            //do Screen.drawRectangle(x, y, x + size, y + size);
			do Screen.drawRectangle(x, y, x + size + width, y + size);
        }
		do Sys.wait(4);
        return;
    }

    method void fireBullet() {
		var int temp;
		let temp = (size + width)/2;
        let bullet = Bullet.new(x + temp);
        return;
    }

    method Bullet getBullet() {
        return bullet;
    }
}
